<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="PLC_SourceRF" Id="{9c3575e7-7af3-4adc-8cb2-e156b68a3772}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PLC_SourceRF
PROGRAM PLC_SourceRF
VAR_INPUT
	nSocketType:UINT:=0;// socket 类型; 0 表示 server; 1 表示 client;
	sTerminalName:STRING;// 通讯对方名称 自定义
	sHost:STRING(20):='127.0.0.1';// 通讯IP地址; server时表示本地host; client时表示远程host
	nPort:UDINT:=8900;// 通讯端口号;
	bEnable:BOOL:=TRUE;// 通讯启用\禁用连接
	sSendSuffix:STRING:='';//此处可统一添加发送后缀字符 $R$N
	nQueueInterval:UDINT:=50;// 发送队列时间间隔 单位ms
	logHandleArray:ARRAY [1..5] OF POINTER TO printLogModule_EX;// log 操作 handle 数组
	logHandleArrayLength:UINT:=0;// log 操作 handle 数组长度, 不超过5
	readStateFlag:BOOL;
	ClearCom:BOOL;
	receiveFlag:BOOL;
END_VAR
VAR_OUTPUT
	bSendCondition	:BOOL;//可发送条件
	bSocketConnected:BOOL;//连接状态
END_VAR
VAR CONSTANT
	cNumBegin		:DINT:=1;
	cNumEnd			:DINT:=100;
END_VAR
VAR
	sendDataArray	:ARRAY [cNumBegin..cNumEnd] OF STRING(255);
	length			:DINT:=0;
	endPoint		:DINT:=cNumBegin;
	popupSendData	:STRING(255);
	//popup
	popupStep		:UINT:=0;
	popupTON1		:TON;
	popupTON2		:TON;
	iPopup			:DINT:=0;
	_PopupLength	:DINT:=0;
END_VAR
VAR
	tcpipClient					:tcpipClientModule_EX;
	tcpipServer					:tcpipServerModule_EX;////定义服务器对象
	
	tcpipSendDataBuff_Server	:STRING(255);//发送数据 Buff server
	tcpipSendDataBuff_Client	:STRING(255);//发送数据 Buff client
	
	tcpipSendDataClear			:STRING(255);//发送数据 清空
	tcpipSendData				:STRING(255);//发送数据
	
	tcpipRecDataBuff_Server		:STRING(255);//已接收数据 Buff server
	tcpipRecDataBuff_Client		:STRING(255);//已接收数据 Buff client
	
	tcpipRecDataClear			:STRING(255);//已接收数据 清空
	tcpipRecData				:STRING(255);//已接收数据
	
	tcpConnectR_Trig			:R_Trig;//初始连接上升沿
	tcpConnectF_Trig			:F_Trig;//初始连接下降沿
	registerStep				:UDINT;//ALC注册控制步
	registerTON					:TON;//ALC注册延时
	
	logHandleArray_index		:UINT:=1;
END_VAR
VAR
	bTrig_Start:BOOL;
	rTrig_Start:R_TRIG;
	tTrig_Start:TON;
	
	bTrig_Stop:BOOL;
	rTrig_Stop:R_TRIG;
	tTrig_Stop:TON;
	
	bTrig_Reset:BOOL;
	rTrig_Reset:R_TRIG;
	tTrig_Reset:TON;
	
	
	bTrig_Init:BOOL;
	rTrig_Init:R_TRIG;
	
	bTrig_All_Home:BOOL;
	rTrig_All_Home:R_TRIG;
	
	bTrig_Z_Safe:BOOL;
	rTrig_Z_Safe:R_TRIG;
	
	bTrig_P_Pos_:BOOL;
	rTrig_P_Pos_:R_TRIG;
	nTrig_P_Pos_TrayNum:UINT:=1;
	nTrig_P_Pos_RowNum:UINT:=1;
	
	bTrig_Move_P_:BOOL;
	rTrig_Move_P_:R_TRIG;
	nTrig_Move_P_TrayNum:UINT:=1;
	nTrig_Move_P_RowNum:UINT:=1;
	nTrig_Move_P_PosNum:UINT:=1;
	findposstart	:INT;
	findposend		:INT;
	find_pos		:INT;
	recStrTemp		:STRING(255);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
CASE nSocketType OF
0://TCPIP server
	tcpipServer(
		sSrvNetId:= , 
		sLocalHost:=sHost , 
		nLocalPort:=nPort , 
		bStartConnect:=bEnable , 
		tcpipSDataLen:=TO_UDINT(LEN(tcpipSendDataBuff_Server)) , 
		tcpipSData:=ADR(tcpipSendDataBuff_Server) , 
		bSend:= , 
		tcpipRecDataLen:=SIZEOF(tcpipRecDataBuff_Server) , 
		tcpipRecData:=ADR(tcpipRecDataBuff_Server) , 
		bAccepted=> , 
		bSendBusy=> , 
		bRecData=> );
	bSendCondition:=tcpipServer.bAccepted AND NOT tcpipServer.bSendBusy;
	//TCPIP连接
	bSocketConnected:=tcpipServer.bAccepted;
	IF NOT tcpipServer.bAccepted THEN
		length:=0;
		endPoint:=cNumBegin;
	END_IF
	tcpConnectR_Trig(CLK:=tcpipServer.bAccepted);
	tcpConnectF_Trig(CLK:=tcpipServer.bAccepted);

1://TCPIP client
	tcpipClient(
		sSrvNetId:= , 
		sRemoteHost:=sHost , 
		nRemotePort:=nPort , 
		bStartConnect:=bEnable , 
		tcpipSDataLen:=TO_UDINT(LEN(tcpipSendDataBuff_Client)) , 
		tcpipSData:=ADR(tcpipSendDataBuff_Client) , 
		bSend:= , 
		tcpipRecDataLen:=SIZEOF(tcpipRecDataBuff_Client) , 
		tcpipRecData:=ADR(tcpipRecDataBuff_Client) , 
		bConnected=> , 
		bSendBusy=> , 
		bRecData=> );
	bSendCondition:=tcpipClient.bConnected AND NOT tcpipClient.bSendBusy;
	//TCPIP连接
	bSocketConnected:=tcpipClient.bConnected;
	IF NOT tcpipClient.bConnected THEN
		length:=0;
		endPoint:=cNumBegin;
	END_IF
	tcpConnectR_Trig(CLK:=tcpipClient.bConnected);
	tcpConnectF_Trig(CLK:=tcpipClient.bConnected);
END_CASE
IF ClearCom THEN
	length:=0;
	endPoint:=cNumBegin;
	ClearCom:=FALSE;
END_IF
IF tcpConnectR_Trig.Q THEN
	FOR logHandleArray_index:=1 TO logHandleArrayLength DO
		logHandleArray[logHandleArray_index]^.append(CONCAT(sTerminalName, ' has been connected'));
	END_FOR
	registerStep:=10;
END_IF
IF tcpConnectF_Trig.Q THEN
	FOR logHandleArray_index:=1 TO logHandleArrayLength DO
		logHandleArray[logHandleArray_index]^.append(CONCAT(sTerminalName, ' has been disconnected'));
	END_FOR
	registerStep:=0;
END_IF
//数据接收处理
CASE nSocketType OF
0://TCPIP server
	IF tcpipServer.bRecData THEN
		tcpipRecData:=tcpipRecDataBuff_Server;//buff转存
		tcpipRecDataBuff_Server:=tcpipRecDataClear;//转存之后清空buff
		dataProcessing();
	END_IF
1://TCPIP client
	IF tcpipClient.bRecData THEN
		tcpipRecData:=tcpipRecDataBuff_Client;//buff转存
		tcpipRecDataBuff_Client:=tcpipRecDataClear;//转存之后清空buff
		dataProcessing();
	END_IF
END_CASE


popup();

CASE registerStep OF
0:
	//Ready
END_CASE

]]></ST>
    </Implementation>
    <Folder Name="CMD" Id="{91335ca9-f4f2-4a84-8f06-8acced179c38}" />
    <Folder Name="Recevie" Id="{535ec05b-b43a-467c-8680-8f4db2c51651}" />
    <Folder Name="Send" Id="{7fb6ca6e-f79c-47fe-8955-cac01d1cd3e6}">
      <Folder Name="Private" Id="{3a954d8c-f87a-4565-888e-4a10b19fa28f}" />
    </Folder>
    <Method Name="appendSend" Id="{0343607d-056a-4665-87c6-3eac0ccafc35}" FolderPath="Send\">
      <Declaration><![CDATA[METHOD appendSend : BOOL
VAR_INPUT
	str			:STRING(255);
END_VAR
VAR
	suffix					:STRING;
	strTemp_appendSend		:STRING(255);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF endPoint>(cNumEnd-1) THEN
	RETURN;
END_IF
suffix:=sSendSuffix;//此处可统一添加发送后缀字符 $R$N

strTemp_appendSend:=CONCAT(str,suffix);
sendDataArray[endPoint]:=strTemp_appendSend;

endPoint:=endPoint+1;
length:=endPoint-cNumBegin;]]></ST>
      </Implementation>
    </Method>
    <Method Name="dataProcessing" Id="{87da2aa9-5d5e-4f75-b3a5-5778c97bbdde}" FolderPath="Recevie\">
      <Declaration><![CDATA[METHOD dataProcessing : BOOL
VAR_INPUT
END_VAR
VAR
	strTemp:STRING;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR logHandleArray_index:=1 TO logHandleArrayLength DO
	CASE nSocketType OF
	0://TCPIP server
//		logHandleArray[logHandleArray_index]^.append(CONCAT(CONCAT(CONCAT('Recevie From ', sTerminalName), ' -- '),tcpipRecData));
	1://TCPIP client
//		logHandleArray[logHandleArray_index]^.append(CONCAT(CONCAT(CONCAT('Recevie From ', sTerminalName), ' -- '),tcpipRecData));
	END_CASE
END_FOR
receiveFlag:=TRUE;
findposend:=0;
find_pos:=0;
IF MID(tcpipRecData,1,32)='$R' AND MID(tcpipRecData,1,33)='$R'  THEN
	gICP.SourceRF.controlMode:=STRING_TO_INT(MID(tcpipRecData,1,1));
	gICP.SourceRF.outputMode:=STRING_TO_INT(MID(tcpipRecData,1,2));
	gICP.SourceRF.outputState:=STRING_TO_INT(MID(tcpipRecData,1,3));
	strTemp:='';
	strTemp:=CONCAT(strTemp,(MID(tcpipRecData,2,6)));
	gICP.SourceRF.alarmState:=STRING_TO_INT(strTemp);
	strTemp:='';
	strTemp:=CONCAT(strTemp,(MID(tcpipRecData,5,9)));
	gICP.SourceRF.setpowerRead:=STRING_TO_UDINT(strTemp);
	strTemp:='';
	strTemp:=CONCAT(strTemp,(MID(tcpipRecData,5,15)));
	gICP.SourceRF.forwardpower:=STRING_TO_UDINT(strTemp);
	strTemp:='';
	strTemp:=CONCAT(strTemp,(MID(tcpipRecData,5,21)));
	gICP.SourceRF.reflectedpower:=STRING_TO_UDINT(strTemp);
	strTemp:='';
	strTemp:=CONCAT(strTemp,(MID(tcpipRecData,5,27)));
	gICP.SourceRF.maxpower:=STRING_TO_UDINT(strTemp);
	readStateFlag:=TRUE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="popup" Id="{841d4731-9d8e-485e-91dc-eaeceb7bb837}" FolderPath="Send\Private\">
      <Declaration><![CDATA[METHOD PRIVATE popup : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE popupStep OF
0:
	IF length>0 AND bSendCondition THEN
		_PopupLength:=length;
		popupSendData:=sendDataArray[cNumBegin];
		FOR iPopup:=cNumBegin TO (_PopupLength-1) DO
			sendDataArray[iPopup]:=sendDataArray[iPopup+1];
		END_FOR
		endPoint:=endPoint-1;
		length:=endPoint-cNumBegin;
		sendData(popupSendData);//此处是调用信息发送
		popupStep:=10;
	END_IF
10:
	popupTON2(IN:=NOT popupTON2.Q, PT:=T#2S);
	IF NOT bSendCondition OR popupTON2.Q THEN
		popupTON2(IN:=FALSE);
		popupStep:=11;
	END_IF
11:
	IF bSendCondition THEN
		popupStep:=12;
	END_IF
	popupTON1(IN:=FALSE);
12:
	//popupTON1(IN:=NOT popupTON1.Q,PT:=T#10MS);
	popupTON1(IN:=NOT popupTON1.Q,PT:=TO_TIME(nQueueInterval));
	IF popupTON1.Q THEN
		popupStep:=0;
	END_IF
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadState" Id="{d514cebf-1622-47c4-91f3-19dd40c5750d}" FolderPath="CMD\">
      <Declaration><![CDATA[METHOD ReadState : BOOL
VAR_INPUT
END_VAR
VAR
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[appendSend('Q$R');]]></ST>
      </Implementation>
    </Method>
    <Method Name="sendData" Id="{4c2931c9-fcaf-41d9-b30a-ab998fb11146}" FolderPath="Send\Private\">
      <Declaration><![CDATA[METHOD PRIVATE sendData : BOOL
VAR_INPUT
	dataStruct	:STRING(255);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bSendCondition AND bEnable THEN
	tcpipSendData:=dataStruct;
	
	CASE nSocketType OF
	0://TCPIP server
		tcpipSendDataBuff_Server:=tcpipSendData;
		tcpipSendData:=tcpipSendDataClear;	
		tcpipServer.bSend:=TRUE;
	1://TCPIP client
		tcpipSendDataBuff_Client:=tcpipSendData;
		tcpipSendData:=tcpipSendDataClear;	
		tcpipClient.bSend:=TRUE;
	END_CASE
	
	FOR logHandleArray_index:=1 TO logHandleArrayLength DO
		CASE nSocketType OF
		0://TCPIP server
//			logHandleArray[logHandleArray_index]^.append(CONCAT(CONCAT(CONCAT('Send To ', sTerminalName), ' -- '),tcpipSendDataBuff_Server));
		1://TCPIP client
//			logHandleArray[logHandleArray_index]^.append(CONCAT(CONCAT(CONCAT('Send To ', sTerminalName), ' -- '),tcpipSendDataBuff_Client));
		END_CASE
	END_FOR
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteMaxPower" Id="{21c86421-f8bf-4b01-a3ec-95d947f7866c}" FolderPath="CMD\">
      <Declaration><![CDATA[METHOD WriteMaxPower : BOOL
VAR_INPUT
	maxpowerpoint:UDINT;
END_VAR
VAR
	str:STRING;
	_bit:UDINT;
	_ten:UDINT;
	_hundred:UDINT;
	_thousand:UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[str:='';
_thousand:=maxpowerpoint/1000;
str:=CONCAT(str,UDINT_TO_STRING(maxpowerpoint));
//_hundred:=maxpowerpoint/100 MOD 10;
//str:=CONCAT(str,UDINT_TO_STRING(_hundred));
//_ten:=maxpowerpoint/10 MOD 10;
//str:=CONCAT(str,UDINT_TO_STRING(_ten));
//_bit:=maxpowerpoint MOD 10;
//str:=CONCAT(str,UDINT_TO_STRING(_bit));
str:=CONCAT(str,' M$R');
appendSend(str);]]></ST>
      </Implementation>
    </Method>
    <Method Name="WritePower" Id="{f175663c-13f1-4747-9e89-40f625f7b91a}" FolderPath="CMD\">
      <Declaration><![CDATA[METHOD WritePower : BOOL
VAR_INPUT
	powerpoint:UDINT;
END_VAR
VAR
	str:STRING;
	_bit:UDINT;
	_ten:UDINT;
	_hundred:UDINT;
	_thousand:UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[str:='';
//_thousand:=powerpoint/1000;
str:=CONCAT(str,UDINT_TO_STRING(powerpoint));
//_hundred:=powerpoint/100 MOD 10;
//str:=CONCAT(str,UDINT_TO_STRING(_hundred));
//_ten:=powerpoint/10 MOD 10;
//str:=CONCAT(str,UDINT_TO_STRING(_ten));
//_bit:=powerpoint MOD 10;
//str:=CONCAT(str,UDINT_TO_STRING(_bit));
str:=CONCAT(str,' W$R');
appendSend(str);]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteReset" Id="{3d94d7d9-9812-422f-9765-87729981f6b6}" FolderPath="CMD\">
      <Declaration><![CDATA[METHOD WriteReset : BOOL
VAR_INPUT
		

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[appendSend('RESET$R');]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteRS232Mode" Id="{d5e10c45-0f0b-4a24-9027-9b4a855d7cfa}" FolderPath="CMD\">
      <Declaration><![CDATA[METHOD WriteRS232Mode : BOOL
VAR_INPUT
		

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[appendSend('***$R');]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteStart" Id="{4722b31e-4f72-4918-95bb-ba04ba840be9}" FolderPath="CMD\">
      <Declaration><![CDATA[METHOD WriteStart : BOOL
VAR_INPUT
		

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[appendSend('G$R');]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteStop" Id="{04bb2ee3-7cd0-4aba-8b2e-35f5bc7edbef}" FolderPath="CMD\">
      <Declaration><![CDATA[METHOD WriteStop : BOOL
VAR_INPUT
		

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[appendSend('S$R');]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="PLC_SourceRF">
      <LineId Id="54" Count="0" />
      <LineId Id="92" Count="1" />
      <LineId Id="97" Count="11" />
      <LineId Id="96" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="155" Count="0" />
      <LineId Id="159" Count="2" />
      <LineId Id="158" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="112" Count="11" />
      <LineId Id="111" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="163" Count="2" />
      <LineId Id="162" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="381" Count="0" />
      <LineId Id="383" Count="1" />
      <LineId Id="382" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="199" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="67" Count="2" />
      <LineId Id="71" Count="0" />
      <LineId Id="205" Count="1" />
      <LineId Id="73" Count="1" />
      <LineId Id="79" Count="1" />
      <LineId Id="181" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="185" Count="3" />
      <LineId Id="184" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="190" Count="3" />
      <LineId Id="189" Count="0" />
      <LineId Id="183" Count="0" />
      <LineId Id="85" Count="1" />
      <LineId Id="175" Count="4" />
      <LineId Id="284" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="PLC_SourceRF.appendSend">
      <LineId Id="17" Count="2" />
      <LineId Id="30" Count="0" />
      <LineId Id="50" Count="1" />
      <LineId Id="53" Count="0" />
      <LineId Id="31" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="PLC_SourceRF.dataProcessing">
      <LineId Id="65" Count="0" />
      <LineId Id="67" Count="4" />
      <LineId Id="66" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="473" Count="0" />
      <LineId Id="394" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="425" Count="0" />
      <LineId Id="431" Count="2" />
      <LineId Id="436" Count="1" />
      <LineId Id="434" Count="0" />
      <LineId Id="441" Count="0" />
      <LineId Id="445" Count="0" />
      <LineId Id="439" Count="0" />
      <LineId Id="447" Count="0" />
      <LineId Id="452" Count="0" />
      <LineId Id="446" Count="0" />
      <LineId Id="454" Count="0" />
      <LineId Id="459" Count="0" />
      <LineId Id="453" Count="0" />
      <LineId Id="461" Count="0" />
      <LineId Id="466" Count="0" />
      <LineId Id="460" Count="0" />
      <LineId Id="427" Count="1" />
      <LineId Id="419" Count="0" />
    </LineIds>
    <LineIds Name="PLC_SourceRF.popup">
      <LineId Id="6" Count="25" />
      <LineId Id="35" Count="0" />
      <LineId Id="32" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="PLC_SourceRF.ReadState">
      <LineId Id="92" Count="0" />
    </LineIds>
    <LineIds Name="PLC_SourceRF.sendData">
      <LineId Id="15" Count="2" />
      <LineId Id="29" Count="1" />
      <LineId Id="42" Count="1" />
      <LineId Id="35" Count="1" />
      <LineId Id="44" Count="1" />
      <LineId Id="41" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="51" Count="1" />
      <LineId Id="58" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="PLC_SourceRF.WriteMaxPower">
      <LineId Id="38" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="15" Count="0" />
    </LineIds>
    <LineIds Name="PLC_SourceRF.WritePower">
      <LineId Id="63" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="15" Count="0" />
    </LineIds>
    <LineIds Name="PLC_SourceRF.WriteReset">
      <LineId Id="15" Count="0" />
    </LineIds>
    <LineIds Name="PLC_SourceRF.WriteRS232Mode">
      <LineId Id="15" Count="0" />
    </LineIds>
    <LineIds Name="PLC_SourceRF.WriteStart">
      <LineId Id="15" Count="0" />
    </LineIds>
    <LineIds Name="PLC_SourceRF.WriteStop">
      <LineId Id="15" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>