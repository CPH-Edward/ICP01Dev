<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="ActStepBase" Id="{a3b05ce9-b0d8-4901-8334-9b364782f99a}" SpecialFunc="None">
    <Declaration><![CDATA[(*
---Control step base interface
*)
FUNCTION_BLOCK ActStepBase IMPLEMENTS ITFActStep
VAR CONSTANT
	{attribute 'hide'}
	BEGIN_STEP		:DINT:=10;
	{attribute 'hide'}
	DONE_STEP		:DINT:=60000;
	{attribute 'hide'}
	ERR_DONE_STEP	:DINT:=65000;
	{attribute 'hide'}
	PAUSE_STEP		:DINT:=65500;
END_VAR
VAR_INPUT
END_VAR
VAR_OUTPUT
	step			:DINT;
	errStep			:DINT;
	pauseNextStep	:DINT;
END_VAR
VAR
	//{attribute 'hide'}
	actState		:ST_ActStep_State;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[getStep();]]></ST>
    </Implementation>
    <Folder Name="Get" Id="{c3272e03-5a93-4152-b0ae-6168d16f9797}" />
    <Folder Name="Is" Id="{e5321c25-63a5-402e-adfe-5d46ee6cd96e}" />
    <Folder Name="Set" Id="{1ab335a3-1fc3-4c13-b036-90b6f9cd450c}" />
    <Folder Name="Step" Id="{6246289c-708c-40ee-87af-f09e5c5a6a94}" />
    <Method Name="Act_Continue" Id="{685e1715-541f-48cc-a5a8-aeb8ceb478a8}">
      <Declaration><![CDATA[(*
---Continue action
*)
METHOD Act_Continue : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[actState.paused:=FALSE;
actState.step:=actState.nextStep;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Act_Ex" Id="{ee5d426f-c21c-4588-9cd1-041b516129ab}">
      <Declaration><![CDATA[(*
---Trigger action
*)
METHOD Act_Ex : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT actState.busy AND NOT actState.error THEN
	Act_Ex:=actState.ex:=actState.busy:=TRUE;
ELSE
	Act_Ex:=FALSE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Act_Init" Id="{bc88da5d-1db5-4172-84d0-0c4a4812e0bc}">
      <Declaration><![CDATA[(*
---Init all status
*)
METHOD Act_Init : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[actState.ex:=actState.pause:=actState.busy:=actState.done:=actState.error:=FALSE;
actState.step:=actState.errStep:=step:=0;
actState.errID:=0;
actState.errMsg:='';

Act_Init:=TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Act_Pause" Id="{65e7c203-9edf-43ab-8d51-8fb169bf1513}">
      <Declaration><![CDATA[(*
---Pause action
*)
METHOD Act_Pause : BOOL
VAR_INPUT
	pause:BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[actState.pause:=pause;
Act_Pause:=TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="addStep" Id="{a3a7967b-d647-4f00-99a7-8c408b298864}" FolderPath="Step\">
      <Declaration><![CDATA[(*
---: add step;
---:
	nextStep: step 增量值;
	checkPause: 是否检测当前 pause; 如果 checkPause:=TRUE, 且暂停被触发后, 当前 step 暂停递增;
*)
METHOD addStep : DINT
VAR_INPUT
	nextStep			:DINT:=0;
	checkPause			:BOOL:=FALSE;// 检查是否暂停，暂停则不递增step
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF checkPause THEN
	IF NOT actState.pause THEN
		actState.step:=actState.step+nextStep;
	END_IF
ELSE
	actState.step:=actState.step+nextStep;
END_IF

addStep:=step:=actState.step;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getActState" Id="{1a9c0758-2142-462a-acf1-4c4397300007}" FolderPath="Get\">
      <Declaration><![CDATA[(*
---Get action state
*)
METHOD getActState : ST_ActStep_State
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[getActState:=actState;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getErrID" Id="{06dccd74-917a-460c-84d1-568d7de16639}" FolderPath="Get\">
      <Declaration><![CDATA[(*
---Get error id
*)
METHOD getErrID : DINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[getErrID:=actState.errID;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getErrMsg" Id="{3af0f11f-c49b-4f09-83d2-e64e58472a23}" FolderPath="Get\">
      <Declaration><![CDATA[(*
---Get error message
*)
METHOD getErrMsg : STRING(255)
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[getErrMsg:=actState.errMsg;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getErrStep" Id="{454bce6a-c71f-4b03-a774-278d5fb6e8c6}" FolderPath="Get\">
      <Declaration><![CDATA[(*
---Get error step
*)
METHOD getErrStep : DINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[getErrStep:=actState.errStep;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getStep" Id="{7f50d397-fec5-4f44-92a7-4999efcb34dc}" FolderPath="Get\">
      <Declaration><![CDATA[(*
---Get step
*)
METHOD getStep : DINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[getStep:=step:=actState.step;]]></ST>
      </Implementation>
    </Method>
    <Method Name="isBusy" Id="{293c7294-c67a-498a-80d1-13f65dedd6ab}" FolderPath="Is\">
      <Declaration><![CDATA[(*
---Check busy state
*)
METHOD isBusy : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
isBusy:=actState.busy;]]></ST>
      </Implementation>
    </Method>
    <Method Name="isDone" Id="{40be26d7-6251-4127-921d-432a2da2024a}" FolderPath="Is\">
      <Declaration><![CDATA[(*
---Check done state
*)
METHOD isDone : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
isDone:=actState.done;]]></ST>
      </Implementation>
    </Method>
    <Method Name="isError" Id="{2a1ac8e6-682c-43a7-9d7b-292dabea85c9}" FolderPath="Is\">
      <Declaration><![CDATA[(*
---Check error state
*)
METHOD isError : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
isError:=actState.error;]]></ST>
      </Implementation>
    </Method>
    <Method Name="isEx" Id="{175e0c94-0529-4d0f-abbc-3b2b40acc23a}" FolderPath="Is\">
      <Declaration><![CDATA[(*
---Check trigger state
*)
METHOD isEx : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
isEx:=actState.ex;]]></ST>
      </Implementation>
    </Method>
    <Method Name="isPause" Id="{f842f542-4714-4d5d-a373-306e2496eab1}" FolderPath="Is\">
      <Declaration><![CDATA[(*
---Check pause state
*)
METHOD isPause : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
isPause:=actState.pause;]]></ST>
      </Implementation>
    </Method>
    <Method Name="setBusyFlag" Id="{bb7cf88f-5b32-48f8-b82c-dcec3dc13cd9}" FolderPath="Set\">
      <Declaration><![CDATA[(*
---Set busy flag
*)
METHOD setBusyFlag
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//actState.busy:=TRUE;
actState.ex:=actState.done:=actState.error:=FALSE;
actState.errID:=0;
actState.step:=step:=actState.errStep:=errStep:=actState.nextStep:=pauseNextStep:=0;
actState.errMsg:='';]]></ST>
      </Implementation>
    </Method>
    <Method Name="setDoneFlag" Id="{f00863fc-41c9-4659-ba37-092cf34a3734}" FolderPath="Set\">
      <Declaration><![CDATA[(*
---Set done flag
*)
METHOD setDoneFlag
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[actState.busy:=FALSE;
actState.pause:=FALSE;
actState.done:=TRUE;
actState.error:=FALSE;
actState.errID:=0;
actState.errMsg:='';]]></ST>
      </Implementation>
    </Method>
    <Method Name="setErrDoneFlag" Id="{2bca7f90-e288-4a13-8c71-97ea40097ee1}" FolderPath="Set\">
      <Declaration><![CDATA[(*
---Set error done flag
*)
METHOD setErrDoneFlag
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[actState.busy:=FALSE;
actState.pause:=FALSE;
actState.done:=FALSE;
actState.error:=TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="setErrID" Id="{0082a529-dbb8-451c-abd8-489562945352}" FolderPath="Set\">
      <Declaration><![CDATA[(*
---Set error id
*)
METHOD setErrID
VAR_INPUT
	errID:DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[actState.errID:=errID;
errStep:=actState.errStep:=actState.step;]]></ST>
      </Implementation>
    </Method>
    <Method Name="setErrMsg" Id="{6d5b8272-0d11-42df-b798-652dfb08ddc8}" FolderPath="Set\">
      <Declaration><![CDATA[(*
---Set error message
*)
METHOD setErrMsg
VAR_INPUT
	errMsg:STRING(255);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[actState.errMsg:=errMsg;
errStep:=actState.errStep:=actState.step;]]></ST>
      </Implementation>
    </Method>
    <Method Name="setError" Id="{a23b9e4f-ac29-45fd-969b-36d8f3d7337c}" FolderPath="Set\">
      <Declaration><![CDATA[(*
---Set error id and error message
*)
METHOD setError
VAR_INPUT
	errID:DINT;
	errMsg:STRING(255);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[setErrID(errID);
setErrMsg(errMsg);]]></ST>
      </Implementation>
    </Method>
    <Method Name="toBeginStep" Id="{0426be86-e782-4d34-ac86-7055fdc50e4e}" FolderPath="Step\">
      <Declaration><![CDATA[(*
---Go to step:=BEGIN_STEP, BEGIN_STEP is 10;
*)
METHOD toBeginStep : DINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[toBeginStep:=step:=actState.step:=BEGIN_STEP;]]></ST>
      </Implementation>
    </Method>
    <Method Name="toDoneStep" Id="{0151039e-596d-4631-ba17-b6f29e4e4a74}" FolderPath="Step\">
      <Declaration><![CDATA[(*
---Go to step:=DONE_STEP, DONE_STEP is 60000;
*)
METHOD toDoneStep : DINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[toDoneStep:=step:=actState.step:=DONE_STEP;]]></ST>
      </Implementation>
    </Method>
    <Method Name="toErrDoneStep" Id="{3d0517ad-6265-464e-b899-de41966cf145}" FolderPath="Step\">
      <Declaration><![CDATA[(*
---Go to step:=ERR_DONE_STEP, ERR_DONE_STEP is 65000;
*)
METHOD toErrDoneStep : DINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[errStep:=actState.errStep:=actState.step;
toErrDoneStep:=step:=actState.step:=ERR_DONE_STEP;]]></ST>
      </Implementation>
    </Method>
    <Method Name="toPauseStep" Id="{5645af0d-3f6c-44c0-9339-74a58bc8303b}" FolderPath="Step\">
      <Declaration><![CDATA[(*
---Go to pause step:=PAUSE_STEP, PAUSE_STEP is 65500; 
---: nextStep: 从暂停解除之后的下一个step值; 
*)
METHOD toPauseStep : DINT
VAR_INPUT
	nextStep			:DINT:=0;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[actState.paused:=TRUE;
actState.nextStep:=pauseNextStep:=nextStep;
actState.step:=PAUSE_STEP;]]></ST>
      </Implementation>
    </Method>
    <Method Name="toStep" Id="{ee085535-10e6-4ef5-b17f-706f6c2ad958}" FolderPath="Step\">
      <Declaration><![CDATA[(*
---: Go to target step;
---:
	nextStep: step 目标值;
	checkPause: 是否检测当前 pause; 如果 checkPause:=TRUE, 且暂停被触发后, 当前 step 暂停递增;
*)
METHOD toStep : DINT
VAR_INPUT
	nextStep			:DINT:=0;// 跳转到目标step
	checkPause			:BOOL:=FALSE;// 检查是否暂停，暂停则不递增step
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF checkPause THEN
	IF NOT actState.pause THEN
		actState.step:=nextStep;
	END_IF
ELSE
	actState.step:=nextStep;
END_IF

toStep:=step:=actState.step;]]></ST>
      </Implementation>
    </Method>
    <Method Name="toZeroStep" Id="{47530837-7dca-4201-86a5-53024a47b4c9}" FolderPath="Step\">
      <Declaration><![CDATA[(*
---Go to step:=0;
*)
METHOD toZeroStep : DINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[toZeroStep:=step:=actState.step:=0;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="ActStepBase">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.Act_Continue">
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.Act_Ex">
      <LineId Id="6" Count="1" />
      <LineId Id="10" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.Act_Init">
      <LineId Id="6" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.Act_Pause">
      <LineId Id="24" Count="0" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.addStep">
      <LineId Id="9" Count="0" />
      <LineId Id="12" Count="1" />
      <LineId Id="10" Count="0" />
      <LineId Id="14" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.getActState">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.getErrID">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.getErrMsg">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.getErrStep">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.getStep">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.isBusy">
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.isDone">
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.isError">
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.isEx">
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.isPause">
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.setBusyFlag">
      <LineId Id="13" Count="3" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.setDoneFlag">
      <LineId Id="7" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="8" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.setErrDoneFlag">
      <LineId Id="7" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.setErrID">
      <LineId Id="14" Count="1" />
    </LineIds>
    <LineIds Name="ActStepBase.setErrMsg">
      <LineId Id="14" Count="1" />
    </LineIds>
    <LineIds Name="ActStepBase.setError">
      <LineId Id="23" Count="0" />
      <LineId Id="25" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.toBeginStep">
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.toDoneStep">
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.toErrDoneStep">
      <LineId Id="15" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.toPauseStep">
      <LineId Id="15" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.toStep">
      <LineId Id="9" Count="0" />
      <LineId Id="12" Count="1" />
      <LineId Id="10" Count="0" />
      <LineId Id="14" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="ActStepBase.toZeroStep">
      <LineId Id="8" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>